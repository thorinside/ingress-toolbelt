buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.0'
        classpath 'com.jakewharton.hugo:hugo-plugin:1.1.0'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'hugo'

repositories {
    jcenter()
}

android {
    compileSdkVersion 21
    buildToolsVersion '21.1.2'
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 21
    }
    signingConfigs {
        releaseConfig {
            storeFile file("/Users/neal/Dropbox/android/thorinside-release-key.keystore")
            storePassword "Mac111Mac111"
            keyAlias "thorinside"
            keyPassword "Mac111Mac111"
        }
    }

    buildTypes {
        release {
            debuggable false
            signingConfig signingConfigs.releaseConfig
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    productFlavors {

        def getVersionCode = { ->
            try {
                def code = new ByteArrayOutputStream()
                exec {
                    commandLine 'git', 'tag', '--list'
                    standardOutput = code
                }
                return code.toString().split("\n").size()
            }
            catch (ignored) {
                return -1;
            }
        }

        def getVersionName = { ->
            try {
                def stdout = new ByteArrayOutputStream()
                exec {
                    commandLine 'git', 'describe', '--match=[^(hudson)].*', '--tags', '--dirty'
                    standardOutput = stdout
                }
                return stdout.toString().trim()
            }
            catch (ignored) {
                return null;
            }
        }

        development {
            versionName getVersionName()
            versionCode getVersionCode()
        }
        production {
            applicationId "org.nsdev.apps.superhappyhackmap.production"
            versionName getVersionName()
            versionCode getVersionCode()
        }
    }

    // add generated-sources to be able to import RobojavaConfig foreasy configuration of custom testrunner
    sourceSets.androidTest.java.srcDirs += 'build/generated-sources'
}

dependencies {
    compile 'com.android.support:appcompat-v7:21.0.3'
    compile 'com.android.support:cardview-v7:21.0.3'
    compile 'com.google.android.gms:play-services-base:6.5.87'
    compile 'com.google.android.gms:play-services-maps:6.5.87'
    compile 'com.google.android.gms:play-services-location:6.5.87'
    compile 'com.google.maps.android:android-maps-utils:0.3.4'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'com.squareup:otto:1.3.5'
    compile 'com.j256.ormlite:ormlite-android:4.48'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'org.slf4j:slf4j-api:1.7.9'
    compile('de.psdev.licensesdialog:licensesdialog:1.6.0') {
        exclude module: 'support-v4'
    }
    compile 'com.cocosw:undobar:1.7.1'
    compile 'com.hovans.standout:library:1.0.5'
    compile 'com.afollestad:material-dialogs:0.4.6'

    androidTestCompile 'junit:junit:4.12'
    androidTestCompile('org.robolectric:robolectric:2.4') {
        exclude group: "commons-logging", module: "commons-logging"
        exclude group: "org.apache.httpcomponents", module: "httpclient"
    }
    // needed because of a bug in cobertura with the bundled version of xerces
    androidTestCompile 'xerces:xercesImpl:2.7.1'

}
