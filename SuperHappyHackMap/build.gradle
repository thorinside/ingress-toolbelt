apply plugin: 'com.android.application'
apply plugin: 'hugo'

android {
    compileSdkVersion 22
    buildToolsVersion '22.0.1'
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 22
        applicationId "org.nsdev.apps.superhappyhackmap"
    }
    signingConfigs {
        releaseConfig {
            storeFile file("/Users/neal/Dropbox/android/thorinside-release-key.keystore")
            storePassword "Mac111Mac111"
            keyAlias "thorinside"
            keyPassword "Mac111Mac111"
        }
    }

    buildTypes {
        release {
            debuggable false
            signingConfig signingConfigs.releaseConfig
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    productFlavors {

        def getVersionCode = { ->
            try {
                def code = new ByteArrayOutputStream()
                exec {
                    commandLine 'git', 'tag', '--list'
                    standardOutput = code
                }
                return code.toString().split("\n").size()
            }
            catch (ignored) {
                return -1;
            }
        }

        def getVersionName = { ->
            try {
                def stdout = new ByteArrayOutputStream()
                exec {
                    commandLine 'git', 'describe', '--match=[^(hudson)].*', '--tags', '--dirty'
                    standardOutput = stdout
                }
                return stdout.toString().trim()
            }
            catch (ignored) {
                return null;
            }
        }

        development {
            versionName getVersionName()
            versionCode getVersionCode()
        }
        production {
            applicationId "org.nsdev.apps.superhappyhackmap.production"
            versionName getVersionName()
            versionCode getVersionCode()
        }
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile 'com.android.support:cardview-v7:22.2.1'
    compile 'com.android.support:design:22.2.1'
    compile 'com.android.support:recyclerview-v7:22.2.1'
    compile 'com.android.support:support-annotations:22.0.0'
    compile 'com.google.android.gms:play-services-base:7.5.0'
    compile 'com.google.android.gms:play-services-maps:7.5.0'
    compile 'com.google.android.gms:play-services-location:7.5.0'
    compile 'com.google.maps.android:android-maps-utils:0.3.4'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'com.squareup:otto:1.3.6'
    compile 'com.j256.ormlite:ormlite-android:4.48'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'org.slf4j:slf4j-api:1.7.9'
    compile('de.psdev.licensesdialog:licensesdialog:1.6.0') {
        exclude module: 'support-v4'
    }
    compile 'com.hovans.standout:library:1.0.5'
    compile 'com.afollestad:material-dialogs:0.7.6.0'

    // Love Button
    compile 'com.anjlab.android.iab.v3:library:1.0.26@aar'
    compile 'com.github.android-s14:rve:1.1.4'

    // Robolectric
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-core:1.1'
    testCompile 'org.hamcrest:hamcrest-library:1.1'
    testCompile 'org.hamcrest:hamcrest-integration:1.1'
    testCompile "org.assertj:assertj-core:1.7.0"

    testCompile("org.robolectric:robolectric:${robolectricVersion}") {
        exclude module: 'classworlds'
        exclude module: 'commons-logging'
        exclude module: 'httpclient'
        exclude module: 'maven-artifact'
        exclude module: 'maven-artifact-manager'
        exclude module: 'maven-error-diagnostics'
        exclude module: 'maven-model'
        exclude module: 'maven-project'
        exclude module: 'maven-settings'
        exclude module: 'plexus-container-default'
        exclude module: 'plexus-interpolation'
        exclude module: 'plexus-utils'
        exclude module: 'wagon-file'
        exclude module: 'wagon-http-lightweight'
        exclude module: 'wagon-provider-api'
    }

}
